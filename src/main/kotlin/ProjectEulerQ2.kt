package org.practice

fun main() {
    val x = ProjectEulerQ2()
    println(x.solution(4000000))
}

class ProjectEulerQ2 {

    /**
     * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
     * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
     * */

    fun solution(maxNumber: Int): Int {
        var sum = 2
        val terms = mutableListOf(1, 2)
        var index = 1

        while (true) {
            val newTerm = terms[index-1] + terms[index]
            if (newTerm >= maxNumber)
                break

            if (isEven(newTerm))
                sum += newTerm

            terms.addLast(newTerm)
            index++

        }

        return sum
    }

    private fun isEven(number:Int):Boolean {
        return (number % 2) == 0
    }

}